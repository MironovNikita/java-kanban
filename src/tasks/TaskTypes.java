package tasks;

public enum TaskTypes {
    TASK,
    EPIC,
    SUBTASK
}
/* Я думал над тем, чтобы сделать тип задачи полем Task'a изначально. Но, так как все мои классы задач (Epic и SubTask)
наследуются от Task, соответственно наследуют и конструктор. И при создании задачи так или иначе пришлось бы либо в
самом конструкторе давать значение как Task, либо просто полю присваивать значению taskType по умолчанию Task...
Тогда бы и мои Epic'и, и мои subTask'и были бы Task'ами. Тогда бы пришлось делать set-метод в конструкторе, чтобы
изменить поле taskType для Epic'ов и SubTask'ов. А это совсем нехорошо, так как менять тип задачи нельзя после её
создания. И я решил, что правильнее будет определять принадлежность к классу той или иной задачи и затем уже в строку
записывать то или иное значение (Task, Epic или SubTask).
Можно, конечно, было бы давать taskType задавать пользователю, но тут тоже не лучший вариант, так как есть вероятность
ошибки. А это, в свою очередь, может повлечь критические ошибки в работе программы, так как, например, в Task нет
списка подзадач, и программа не сработает, выбросив критическую ошибку.

Ещё, конечно, можно было сделать абстрактный класс с задачей, который бы имел общие поля и методы для всех задач, а уже
от него наследовать классы Task, Epic и SubTask с их типом задачи taskType и другими отличающими классы друг от друга
полями. Но, я думаю, что в этом нет необходимости, так как у нас и так по сути все задачи основываются на Task.
SubTask это по сути тот же Task, с одной лишь разницей, что мы выделяем этот класс, чтобы нельзя было наши task'и
закидывать в списки epic'ов. Да и в целом тип задач нам нужен при выводе в консоль "внутрипрограммно", чтобы понимать,
какой тип задачи создался, и правильно ли всё работает. Пользователю по факту всё равно, какой у него тип задачи
создался: Task или Epic. Он будет создавать просто задачу и видеть лишь имя задачи с описанием, и есть ли у неё
подпункты или нет. Поэтому решил просто проверять принадлежность к классам и далее записывать тип задачи из
перечисления (которое нужно добавить и по ТЗ).

P.S. Извиняюсь за столь большой ответ, просто хотел выразить все мысли, которые есть на этот счёт.*/